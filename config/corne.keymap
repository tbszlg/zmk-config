/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        qw-esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        soft_off {
            bindings = <&soft_off>;
            key-positions = <0 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R         &kp T            &kp Y    &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A  &kp S  &kp D         &kp F         &kp G            &kp H    &kp J      &kp K      &kp L    &sl 2     &kp EQUAL
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V         &lt 1 B          &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_ALT  &kp LEFT_GUI  &kp BACKSPACE    &kp RET  &kp SPACE  &tog 1
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N7      &kp N8     &kp N9  &trans  &trans
&trans  &to 3   &trans  &trans  &trans  &trans    &trans     &kp N4      &kp N5     &kp N6  &sl 2   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0     &kp N1      &kp N2     &kp N3  &trans  &trans
                        &to 0   &trans  &trans    &kp.COMMA  &kp PERIOD  &kp N0
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL     &kp AT          &kp HASH          &kp DLLR              &kp PRCNT        &kp CARET         &kp AMPS               &kp ASTRK          &kp PLUS         &kp EQUAL  &trans
&kp LCTRL  &kp TILDE    &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LESS_THAN    &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &trans     &trans
&kp LSHFT  &kp PERCENT  &kp GRAVE       &kp SQT           &kp SEMICOLON         &kp BACKSLASH    &kp PIPE          &kp COLON              &kp DOUBLE_QUOTES  &trans           &trans     &trans
                                        &to 0             &trans                &kp DEL          &kp MINUS         &kp UNDERSCORE         &kp NUMBER_0
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &to 0   &trans  &trans    &trans    &trans    &trans
            >;
        };
    };
};
